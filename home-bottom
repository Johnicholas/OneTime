</i></pre>
</td>
<td style="padding-left: 3%; padding-right: 3%; width: 19%; vertical-align: top; font-size: 85%;" >

<p>Note that the one-time pad method depends completely on the quality
of the pad data: if the pad is not truly random, the security of your
messages cannot be guaranteed.  So to use OneTime reliably, you need a
source of good random data to create pad files.  On modern Linux
systems, the <tt>/dev/random</tt> device is probably good enough
(<a href="#pad-generation" >here's how</a> to do
it, but note I haven't done the math myself&nbsp;&mdash;&nbsp;I'm just
taking other people's <a
href="http://en.wikipedia.org/wiki//dev/random#Linux" >word</a>
for it).  Elsewhere, you're on your own.</p>

<p>Also, if the same pad data is used to encrypt different
messages&nbsp;&mdash;&nbsp;no matter how similar or different those
messages are&nbsp;&mdash;&nbsp;then the security of the system can be
greatly compromised.  Never encrypt different messages with the same
stretch of pad!  Doing so could reveal some or all of the used pad to
eavesdroppers.  OneTime's default behavior is to always avoid reusing
pad data, unless you tell it otherwise.</p>

<p><span style="text-decoration: underline;">Recommended
practice:</span> if you are Alice communicating with Bob, then keep
two different pads, <tt>alice_to_bob.pad</tt>
and <tt>bob_to_alice.pad</tt>, as opposed to sharing the same pad for
both directions of communication.  With two separate pads, even if you
each send a message simultaneously to the other with no advance
planning, you still won't accidentally use any of the same pad data
twice, assuming you let OneTime do its bookkeeping naturally.</p>
</div>

</body>
</html>
