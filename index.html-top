<html>
<head>
<title>OneTime: An Encoder/Decoder Using The "One-Time Pad" Method</title>
<style type="text/css">
  body { background: white; margin-left: 5%; margin-right: 5%; }
  h1, h2, h3 { text-align: center; }
  :target { border: 2px solid red; }
  a, img { border: none; }
</style>
</head>

<div id="content">

<div style="background: lightblue; font-style: italic;">
   <h2>OneTime: An Encoder/Decoder Using The "One-Time Pad" Method</h2>
</div>

<h3><a href="get.html" >Download OneTime version ONETIMEVERSION</a></h3>

<table style="border: 0;">
<tr style="border-top: 0; border-bottom: 0;">
<td style="border-right: 1px solid grey; padding-left: 3%; padding-right: 3%; width: 67%; vertical-align: top;">
<p><a href="onetime">OneTime</a> is
an <a href="http://www.opensource.org/" >open source</a>
encryption program that uses the <a
href="http://en.wikipedia.org/wiki/One-time_pad">one-time pad</a>
algorithm to allow two parties to communicate securely, without
worrying about <a
href="http://en.wikipedia.org/wiki/NSA_electronic_surveillance_program"
>unauthorized people listening in</a>.  OneTime has features to assist
with the bureaucracy of pad management and comes with built-in help.
It is written in the <a href="http://www.python.org/" >Python</a>
programming language and requires a Python interpreter to run.</p>

<p>In Debian GNU/Linux or Ubuntu, you can just use the package manager
to install the "<a href="http://packages.debian.org/sid/onetime"
>onetime</a>" package.  (But as of July 2013, the version of OneTime
packaged in Debian and Ubuntu is a major version number behind this
upstream release; we'll try to get the distros updated soon.)</p>

<p>Note that the one-time pad method depends completely on the quality
of the pad data: if the pad is not truly random, the security of your
messages cannot be guaranteed.  So to use OneTime reliably, you need a
source of good random data to create pad files.  On modern Linux
systems, the <tt>/dev/random</tt> device is probably good enough (I
haven't done the math myself, I'm just taking other people's
<a href="http://en.wikipedia.org/wiki//dev/random#Linux" >word</a> for
it); elsewhere, you're on your own.</p>

<p>Also, if the same pad data is used to encrypt different plaintext
messages&nbsp;&mdash;&nbsp;even slightly different ones, such as the
same plaintext but shifted a bit&nbsp;&mdash;&nbsp;then the security
of the system is greatly compromised.  Never encrypt with the same
stretch of pad twice!  Doing so could reveal some or all of the used
pad to eavesdroppers.  OneTime's default behavior is to always avoid
reusing pad data, unless you tell it otherwise.</p>

</td>
<td style="padding-left: 3%; padding-right: 3%; width: 33%; vertical-align: top;" >
<p style="font-style: italic;" >When would I use this?</p>

<p>Not often, probably, given the difficulty of secure advance pad
exchange.  But it might be handy in a few rare situations:</p>

<ul style="padding-left: 3%; list-style-type: circle; ">
<li><p>You're not completely confident about the provenance of <a href="http://www.gnupg.org/" >GnuPG</a> on your system;</p></li>
<li><p>To bootstrap trust: i.e., to have a reliable fallback method for
  exchanging other, more convenient keys;</p></li>
<li><p>To have an encryption program whose code is small and simple
  enough that you can inspect it and understand it;</p></li>
<li><p>To throw a little diversity into the surveillance stream.
  Bots are watching for &amp; saving messages in the popular
  encryption formats.  OneTime makes 'em work a little harder! :-)</p> </li>
</ul>
</td></tr></table>

<p>Here is the output of '<b>onetime&nbsp;--intro</b>':</p>

<pre><i>