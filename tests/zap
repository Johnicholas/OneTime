#!/usr/bin/env python

__doc__ = """Replace a byte at a certain position in a file with a new value.
Usage: zap FILE POSN EXPECTED_VALUE NEW_VALUE
The values are given as decimal numbers between 0 and 255 inclusive.
If EXPECTED_VALUE is "?" then accept any value at POSN.
"""

import sys

def main():
  if len(sys.argv) != 5:
    sys.stderr.write("ERROR: need exactly four arguments:\n")
    sys.stderr.write("       FILE POSN EXPECTED_VALUE NEW_VALUE\n")
    sys.exit(1)

  filename  = sys.argv[1]
  position  = int(sys.argv[2])
  expected  = '?' if sys.argv[3] == '?' else int(sys.argv[3])
  new_val   = int(sys.argv[4])

  if expected != '?' and (expected < 0 or expected > 255):
    sys.stderr.write("ERROR: expected_value must be between 0 and 255\n")
    sys.exit(1)
  if new_val < 0 or new_val > 255:
    sys.stderr.write("ERROR: new_val must be between 0 and 255\n")
    sys.exit(1)

  f = open(filename, "r+b")
  f.seek(position)
  ch = ord(f.read(1))

  if expected != '?' and ch != expected:
    sys.stderr.write("ERROR: expected '%c', found '%c'\n" % (expected, ch))
    sys.exit(1)
  
  f.seek(position)
  f.write(str(chr(new_val)))


if __name__ == '__main__':
  main()
